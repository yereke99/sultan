from aiogram import types
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types.message import Message
from load import dp, bot
from aiogram import types 
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
import logging
from keyboard import*
from database import Database
import datetime
from main import*
import asyncio
from config import admin
from datetime import datetime
from traits import *
import time
from traits import*
from config import*
import os
import uuid


generator = Generator()
btn = Button()
db = Database()




# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–≤–µ–¥–µ–Ω–∏–π (–≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
Establishments = {}

class Forma(StatesGroup):
    s1 = State()  
    

@dp.message_handler(state='*', commands='üîï –û—Ç–º–µ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏')
@dp.message_handler(Text(equals='üîï –û—Ç–º–µ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏', ignore_case=True), state='*')
async def cancell_handler(message: types.Message, state: FSMContext):
    """
    :param message: –ë–∞—Å—Ç–∞—Ä—Ç—ã–ª–¥—ã
    :param state: –¢–æ“õ—Ç–∞—Ç—É
    :return: finish
    """
    
    current_state = await state.get_state()
    if current_state is None:
        return

    logging.info('–ë–∞—Å —Ç–∞—Ä—Ç—É!')
    
    await state.finish()
    await message.reply('–°—ñ–∑ —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç–∞–Ω –±–∞—Å —Ç–∞—Ä—Ç—Ç—ã“£—ã–∑.', reply_markup=btn.menu_not_paid())

@dp.message_handler(state=Forma.s1)
async def send_to_users(message: types.Message, state: FSMContext):
    
    async with state.proxy() as data:
        data['data'] = message.text
        data['user_name'] = message.from_user.username or "No username"
        data['user_id'] = message.from_user.id

    establishment_id = str(uuid.uuid4()) 
    Establishments[establishment_id] = dict(data)  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Å–ª–æ–≤–∞—Ä—å
    
    await bot.send_message(
        message.from_user.id,
        text="–ó–∞–≤–µ–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –æ–Ω–æ –±—É–¥–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–æ.",
        reply_markup=btn.menu()
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    await bot.send_message(
        admin,
        text=f"–ó–∞–≤–µ–¥–µ–Ω–∏–µ: {data['data']}\n–Æ–∑–µ—Ä: {data['user_name']}",
        reply_markup=btn.accept(establishment_id)
    )

    await state.finish()
